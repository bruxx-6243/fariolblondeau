---
import { SEO } from "astro-seo";

import { defaultMedtaData } from "@/data/constants";

const { openGraph } = defaultMedtaData;

interface Props {
  title?: string;
  description?: string;
  ogImage?: URL;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

if (Astro.props.ogImage === undefined) {
  Astro.props.ogImage = new URL(openGraph.image.src, canonicalURL);
}

const {
  title = openGraph.title,
  description = defaultMedtaData.description,
  ogImage,
} = Astro.props;
---

<SEO
  title={title}
  description={description}
  openGraph={{
    basic: {
      title: openGraph.title,
      type: openGraph.type,
      image: String(ogImage),
      url: canonicalURL,
    },
  }}
  twitter={{
    creator: defaultMedtaData.twitter,
  }}
  extend={{
    link: [
      {
        rel: "shortcut icon",
        type: "image/svg+xml",
        href: `${Astro.site}favicon.svg`,
      },
      { rel: "sitemap", href: "/sitemap-index.xml" },
    ],

    meta: [
      { name: "viewport", content: "width=device-width, initial-scale=1" },

      { name: "og:description", content: description },

      { name: "twitter:image", content: String(ogImage) },
      { name: "twitter:title", content: openGraph.title },
      { name: "twitter:description", content: defaultMedtaData.description },
      { name: "twitter:creator", content: defaultMedtaData.twitter },
      { name: "twitter:site", content: defaultMedtaData.twitter },
      { name: "twitter:card", content: "summary_large_image" },
      { name: "twitter:url", content: String(canonicalURL) },

      { name: "author", content: defaultMedtaData.title },
      {
        name: "keywords",
        content: "astro, blog, web dev, programming, projects, portfolio",
      },
      { name: "generator", content: Astro.generator },

      { name: "robots", content: "index, follow" },
      { name: "googlebot", content: "index, follow" },
    ],
  }}
/>
